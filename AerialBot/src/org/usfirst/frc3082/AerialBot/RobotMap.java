// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.
package org.usfirst.frc3082.AerialBot;
    
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import java.util.Vector;
import edu.wpi.first.wpilibj.Talon;
import edu.wpi.first.wpilibj.Encoder;
import edu.wpi.first.wpilibj.Compressor;
import edu.wpi.first.wpilibj.DoubleSolenoid;
import edu.wpi.first.wpilibj.CounterBase.EncodingType;
import edu.wpi.first.wpilibj.PIDSource.PIDSourceParameter;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.camera.AxisCamera;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static Talon launcherSpeedControl;
    public static Encoder launcherQuadratureEncoder1;
    public static Talon drivetrainLeft;
    public static Talon drivetrainRight;
    public static Talon intakeIntakeMotors;
    public static Compressor airSysCompressor1;
    public static DoubleSolenoid airSysLauncherSol;
    public static DoubleSolenoid airSysIntakeSol;
    public static RobotDrive chassis;
    public static AxisCamera cam;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        launcherSpeedControl = new Talon(1, 4);
	LiveWindow.addActuator("Launcher", "Speed Control", (Talon) launcherSpeedControl);
        
        launcherQuadratureEncoder1 = new Encoder(1, 3, 1, 4, false, EncodingType.k4X);
	LiveWindow.addSensor("Launcher", "Quadrature Encoder 1", launcherQuadratureEncoder1);
        launcherQuadratureEncoder1.setDistancePerPulse(1.0);
        launcherQuadratureEncoder1.setPIDSourceParameter(PIDSourceParameter.kRate);
        launcherQuadratureEncoder1.start();
        drivetrainLeft = new Talon(1, 1);
	LiveWindow.addActuator("Drivetrain", "Left", (Talon) drivetrainLeft);
        
        drivetrainRight = new Talon(1, 2);
	LiveWindow.addActuator("Drivetrain", "Right", (Talon) drivetrainRight);
        
        intakeIntakeMotors = new Talon(1, 3);
	LiveWindow.addActuator("Intake", "Intake Motors", (Talon) intakeIntakeMotors);
        
        airSysCompressor1 = new Compressor(1, 1, 1, 1);
	
        
        airSysLauncherSol = new DoubleSolenoid(1,2);      
	
        
        airSysIntakeSol = new DoubleSolenoid(3, 4);  
        
        
        chassis = new RobotDrive(drivetrainLeft,drivetrainRight);
        
        
	
        
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
